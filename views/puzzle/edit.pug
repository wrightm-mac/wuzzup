extends ../layout

include ../mixins/hidden
include ../mixins/puzzle/board
include ../mixins/puzzle/clues
include ../mixins/puzzle/tags

block content
  link(href='/css/puzzle.css', rel='stylesheet')
  script(src="/scripts/puzzle.js")

  h1  Edit Puzzle
  p
    | Edit the puzzle's title, description, board, and clues.

  h3(contenteditable, title='click to edit')#puzzle-title.puzzle-title= puzzle.name ||  "Puzzle"
  div(contenteditable, title='click to edit')#puzzle-description.puzzle-description= puzzle.description || "Description."

  +board('edit')

  +clues('editclues')

  +tags('edittags', true)

  section.puzzle-buttons
    div#savepuzzle.standard-button Save

  +hidden('puzzle-content', puzzle)

  script.
    $(function() {
      const $acrossList = $("section#editclues ul#across");
      const $downList = $("section#editclues ul#down");

      let clues = {};

      $("section.clues").on("blur", "div.puzzle-list-clue", function() {
        const $this = $(this);
        clues[$this.closest("li").attr("data-pos")] = $this.text();
      })

      function makeAnchorId(prefix, anchor) {
        return `${prefix}-${anchor.pos.column}-${anchor.pos.row}`;
      }

      function makeClueItem(anchor, prefix, word) {
        const id = makeAnchorId(prefix, anchor);
        const $item = $("<li>", {class: "puzzle-list-item"})
                      .attr("data-number", anchor.number)
                      .attr("data-column", anchor.pos.column)
                      .attr("data-row", anchor.pos.row)
                      .attr("data-pos", id)
                      .append($("<span>", {class: "puzzle-list-anchor"}).text(anchor.number))
                      .append($("<span>", {class: "puzzle-list-word"}).text(` [${word.text || ""}]`))
                      .append($("<span>", {class: "puzzle-list-size"}).text(` (${word.length})`))
                      .append($("<div>", {class: "puzzle-list-clue", title: "click to edit", contenteditable: true}).text(word.clue || "[not set]"));

        return $item;
      }

      function change(event) {
        $acrossList.empty();
        $downList.empty();

        $.each(event.anchors, function() {
            if (this.horizontal) {
              $acrossList.append(makeClueItem(this, "a", this.horizontal));
            }
            if (this.vertical) {
              $downList.append(makeClueItem(this, "d", this.vertical));
            }
        });
      }

      function anchorload(anchor) {
        if (anchor.horizontal) {
          $acrossList.append(makeClueItem(anchor, "a", anchor.horizontal));
        }
        if (anchor.vertical) {
          $downList.append(makeClueItem(anchor, "d", anchor.vertical));
        }
      }

      const settings = {
        editing: true,
        events: {
          load: change,
          anchorload: anchorload,
          cell: change,
          letter: change
        }
      };

      const puzzle = $.getHidden("puzzle-content") || {};
      const puzzleInfo = {
        _id: puzzle._id,
        _v: puzzle._v,
        hash: puzzle.hash
      }
      console.log("/puzzle/edit.html(%o)", puzzle);

      $("#savepuzzle").click(function() {
        let data = $("table#edit").puzzle().contents(anchor => {
          if (anchor.horizontal) {
            anchor.horizontal.clue = clues[makeAnchorId("a", anchor)];
          }
          if (anchor.vertical) {
            anchor.vertical.clue = clues[makeAnchorId("d", anchor)];
          }
        });

        data = $.extend(data, puzzleInfo, {
          name: $("#puzzle-title").text(),
          description: $("#puzzle-description").text(),
          tags: $("#edittags").val().split(" ")
        });

        console.log("save: data(%o)", data);

        $.ajax(
          {
            url: "/puzzle",
            method: puzzleInfo.hash ? "PUT" : "POST",
            data: data
          }
        ).
        then(function(response) {
          console.info("$.post: response - %o", response);
          puzzleInfo._id = response._id;
          puzzleInfo._v = response._v;
          puzzleInfo.hash = response.hash;
        })
        .catch(function(error) {
          console.error("$.ajax: error - %o", error.responseJSON);
        });
      });

      $("table#edit").puzzle(puzzle,  settings)
        .end()
        .fadeIn();
    });